
iperf -s
iperf -c 192.168.137.89 -w 100M -t 120 -i 10

time dd if=/dev/zero of=test.dbf bs=1024k count=1000
sudo hdparm -tT /dev/mmcblk0p1


sftp://192.168.137.89

http://raspberrypi.stackexchange.com/questions/23182/how-to-stream-video-from-raspberry-pi-camera-and-watch-it-live
http://www.dexterindustries.com/GoPiGo/projects/python-examples-for-the-raspberry-pi/raspberry-pi-browser-streaming-robot/


raspberry pi 3 camera

sudo raspi-config
打開CAMERA
sudo modprobe bcm2835-v4l2

sudo apt-get install python-numpy python-scipy python-matplotlib python-notebook python-pandas python-sympy python-nose

connmanctl config wifi_2cf7f10637d0_727069332d6170_managed_psk --nameservers 8.8.8.8 8.8.4.4

示波器方案推薦
IC:
STM32F4XX系列 規格上有符合需要

推薦開發板:
STM32-E407 development board
STM32-P407 development board
有SD卡(最高讀寫速度沒有說明)
有USB 2.0 HS
ADC:
3×12-bit, 2.4 MSPS A/D converters: 24 channels and 7.2 MSPS in triple interleaved mode

mjpg_streamer -i '/usr/local/lib/input_uvc.so -d /dev/video0 -r 640x480 -f 15 -n -y' -o '/usr/local/lib/output_http.so -w /usr/local/www -p 8080'
./mjpg_streamer -i "./input_uvc.so" -o "./output_http.so -w ./www"


sudo apt-get install subversion
svn co https://svn.code.sf.net/p/mjpg-streamer/code/mjpg-streamer mjpg-streamer
sudo apt-get install libjpeg8-dev 
sudo apt-get install imagemagick
cd mjpg-streamer
sudo make
./mjpg_streamer -i "./input_uvc.so -r 640x480 -f 30 -y -n" -o "./output_http.so -p 8090 -w ./www"


飞思卡尔I.MX6UL 环境搭建
目前官网按照的是yocto搭建，现在整理了一份脱离yocto形式编译的编译方法，和传统的编译方法一直，yocto编译的交叉编译器采用的是yocto自带编译出来的，看了下好像是4.9.2版本，可能FSL对其加入了一些自己的东西，我现在使用的是gcc-4.6.2-glibc-2.13-linaro应该也是可以的,但是rootfs中有些动态链接库用不了有可能。
接下来就是如何搭建环境了，首先搭建交叉编译环境，把gcc-4.6.2-glibc-2.13-linaro.tar.bz2解压到usr/local/下面，然后指定系统交叉编译环境，执行mkenv.sh脚本，命令为
source mkenv.sh
mkenv.sh内容如下：
#!/bin/bash
exportLD_LIBRARY_PATH=/usr/local/fsl-linaro-toolchain/libLD_LIBRARY_PATH
exportPATH=/usr/local/fsl-linaro-toolchain/bin/PATH
exportCROSS_COMPILE=arm-none-linux-gnueabi-
export ARCH=arm
然后将kernel.tar.gz  和 uboot.tar.gz解压到你自己的工作目录下面，首先编译uboot：
进入到uboot根目录下面，然后分别执行以下命令：
makedistclean
make clean
make mx6ul_14x14_evk_config
make
编译成功后你可以在uboot的根目录下面看到u-boot.imx
到此uboot编译完成，如果你想修改自己的uboot，可以带board下面自行修改。
编译kernel：
进入到内核更目录下面，然后分别执行以下命令：
make distclean
make clean
make imx_v7_defconfig
make zImage LOADADDR=0x10008000
编译完成后你可以在arch/arm/boot/下面考到zImage，这就是内核文件。
百度云盘存有uboot,kernel，交叉工具链，环境脚本文件，下载即可。
云盘分享：
http://pan.baidu.com/s/1c1gsMq8


進程pid結束子進程的ppid()會有錯誤