正則表達式(Regular Expressions)大補帖

一、校驗數字的運算式 
1 數字：^[0-9]*$
2 n位元的數字：^\d{n}$
3 至少n位元的數字：^\d{n,}$
4 m-n位元的數字：^\d{m,n}$
5 零和非零開頭的數字：^(0|[1-9][0-9]*)$
6 非零開頭的最多帶兩位元小數的數位：^([1-9][0-9]*)+(.[0-9]{1,2})?$
7 帶1-2位小數的正數或負數：^(-)?\d+(.\d{1,2})?$
8 正數、負數、和小數：^(-|+)?\d+(.\d+)?$
9 有兩位小數的正實數：^[0-9]+(.[0-9]{2})?$
10 有1~3位小數的正實數：^[0-9]+(.[0-9]{1,3})?$
11 非零的正整數：^[1-9]\d$ 或 ^([1-9][0-9]){1,3}$ 或 ^+?[1-9][0-9]*$
12 非零的負整數：^-[1-9][]0-9"$ 或 ^-[1-9]\d$
13 非負整數：^\d+$ 或 ^[1-9]\d*|0$
14 非正整數：^-[1-9]\d*|0$ 或 ^((-\d+)|(0+))$
15 非負浮點數：^\d+(.\d+)?$ 或 ^[1-9]\d.\d|0.\d[1-9]\d|0?.0+|0$
16 非正浮點數：^((-\d+(.\d+)?)|(0+(.0+)?))$ 或 ^(-([1-9]\d.\d|0.\d[1-9]\d))|0?.0+|0$
17 正浮點數：^[1-9]\d.\d|0.\d[1-9]\d$ 或 ^(([0-9]+.[0-9][1-9][0-9])|([0-9][1-9][0-9].[0-9]+)|([0-9][1-9][0-9]))$
18 負浮點數：^-([1-9]\d.\d|0.\d[1-9]\d)$ 或 ^(-(([0-9]+.[0-9][1-9][0-9])|([0-9][1-9][0-9].[0-9]+)|([0-9][1-9][0-9])))$
19 浮點數：^(-?\d+)(.\d+)?$ 或 ^-?([1-9]\d.\d|0.\d[1-9]\d|0?.0+|0)$
二、校驗字元的運算式 
1 漢字：^[\u4e00-\u9fa5]{0,}$
2 英文和數位：^[A-Za-z0-9]+$ 或 ^[A-Za-z0-9]{4,40}$
3 長度為3-20的所有字元：^.{3,20}$
4 由26個英文字母組成的字串：^[A-Za-z]+$
5 由26個大寫英文字母組成的字串：^[A-Z]+$
6 由26個小寫英文字母組成的字串：^[a-z]+$
7 由數位和26個英文字母組成的字串：^[A-Za-z0-9]+$
8 由數位、26個英文字母或者底線組成的字串：^\w+$ 或 ^\w{3,20}$
9 中文、英文、數位包括底線：^[\u4E00-\u9FA5A-Za-z0-9_]+$
10 中文、英文、數字但不包括底線等符號：^[\u4E00-\u9FA5A-Za-z0-9]+$ 或 ^[\u4E00-\u9FA5A-Za-z0-9]{2,20}$
11 可以輸入含有^%&',;=?$\"等字元：[^%&',;=?$\x22]+
12 禁止輸入含有~的字元：[^~\x22]+
三、特殊需求運算式 
1 Email地址：^\w+([-+.]\w+)@\w+([-.]\w+).\w+([-.]\w+)*$
2 功能變數名稱：[a-zA-Z0-9][-a-zA-Z0-9]{0,62}(/.[a-zA-Z0-9][-a-zA-Z0-9]{0,62})+/.?
3 InternetURL：[a-zA-z]+://[^\s] 或 ^http://([\w-]+\.)+[\w-]+(/[\w-./?%&=])?$
4 手機號碼：^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d{8}$
5 電話號碼("XXX-XXXXXXX"、"XXXX-XXXXXXXX"、"XXX-XXXXXXX"、"XXX-XXXXXXXX"、"XXXXXXX"和"XXXXXXXX)：^((\d{3,4}-)|\d{3.4}-)?\d{7,8}$
6 國內電話號碼(0511-4405222、021-87888822)：\d{3}-\d{8}|\d{4}-\d{7}
7 身份證號(15位元、18位元數字)：^\d{15}|\d{18}$
8 短身份證號碼(數位、字母x結尾)：^([0-9]){7,18}(x|X)?$ 或 ^\d{8,18}|[0-9x]{8,18}|[0-9X]{8,18}?$
9 帳號是否合法(字母開頭，允許5-16位元組，允許字母數位底線)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$
10 密碼(以字母開頭，長度在6~18之間，只能包含字母、數位和底線)：^[a-zA-Z]\w{5,17}$
11 強式密碼(必須包含大小寫字母和數位的組合，不能使用特殊字元，長度在8-10之間)：^(?=.\d)(?=.[a-z])(?=.*[A-Z]).{8,10}$
12 日期格式：^\d{4}-\d{1,2}-\d{1,2}
13 一年的12個月(01～09和1～12)：^(0?[1-9]|1[0-2])$
14 一個月的31天(01～09和1～31)：^((0?[1-9])|((1|2)[0-9])|30|31)$
15 錢的輸入格式：
16 1.有四種錢的表示形式我們可以接受:"10000.00" 和 "10,000.00", 和沒有 "分" 的 "10000" 和 "10,000"：^[1-9][0-9]*$
17 2.這表示任意一個不以0開頭的數字,但是,這也意味著一個字元"0"不通過,所以我們採用下面的形式：^(0|[1-9][0-9]*)$
18 3.一個0或者一個不以0開頭的數字.我們還可以允許開頭有一個負號：^(0|-?[1-9][0-9]*)$
19 4.這表示一個0或者一個可能為負的開頭不為0的數字.讓用戶以0開頭好了.把負號的也去掉,因為錢總不能是負的吧.下面我們要加的是說明可能的小數部分：^[0-9]+(.[0-9]+)?$
20 5.必須說明的是,小數點後面至少應該有1位數,所以"10."是不通過的,但是 "10" 和 "10.2" 是通過的：^[0-9]+(.[0-9]{2})?$
21 6.這樣我們規定小數點後面必須有兩位,如果你認為太苛刻了,可以這樣：^[0-9]+(.[0-9]{1,2})?$
22 7.這樣就允許用戶只寫一位小數.下面我們該考慮數字中的逗號了,我們可以這樣：^[0-9]{1,3}(,[0-9]{3})*(.[0-9]{1,2})?$
23 8.1到3個數字,後面跟著任意個 逗號+3個數字,逗號成為可選,而不是必須：^([0-9]+|[0-9]{1,3}(,[0-9]{3})*)(.[0-9]{1,2})?$
24 備註：這就是最終結果了,別忘了"+"可以用"*"替代如果你覺得空字串也可以接受的話(奇怪,為什麼?)最後,別忘了在用函數時去掉去掉那個反斜線,一般的錯誤都在這裡
25 xml文件：^([a-zA-Z]+-?)+[a-zA-Z0-9]+\.[x|X][m|M][l|L]$
26 中文字元的規則運算式：[\u4e00-\u9fa5]
27 雙位元組字元：[^\x00-\xff] (包括漢字在內，可以用來計算字串的長度(一個雙位元組字元長度計2，ASCII字元計1))
28 空白行的規則運算式：\n\s*\r (可以用來刪除空白行)
29 HTML標記的規則運算式：<(\S?)[^>]>.?</\1>|<.? /> (網上流傳的版本太糟糕，上面這個也僅僅能部分，對於複雜的嵌套標記依舊無能為力)
30 首尾空白字元的規則運算式：^\s|\s$或(^\s)|(\s$) (可以用來刪除行首行尾的空白字元(包括空格、定位字元、換頁符等等)，非常有用的運算式)
31 騰訊QQ號：[1-9][0-9]{4,} (騰訊QQ號從10000開始)
32 中國郵遞區號：[1-9]\d{5}(?!\d) (中國郵遞區號為6位元數字)
33 IP地址：\d+.\d+.\d+.\d+ (提取IP地址時有用)
34 IP地址：((?:(?:25[0-5]|2[0-4]\d|[01]?\d?\d)\.){3}(?:25[0-5]|2[0-4]\d|[01]?\d?\d))

作者： GD_SeHun 
連結：http://www.imooc.com/article/3591
來源：慕課網



正則表達式之全部符號解釋
字符 描述
/ 	將下一個字符標記為一個特殊字符、或一個原義字符、或一個 向後引用、或一個八進制轉義符。例如，'n' 匹配字符 "n"。'/n' 匹配一個換行符。序列 '//' 匹配 "/" 而 "/(" 則匹配 "("。
^ 	匹配輸入字符串的開始位置。如果設置了 RegExp 對象的 Multiline 屬性，^ 也匹配 '/n' 或 '/r' 之後的位置。
$ 	匹配輸入字符串的結束位置。如果設置了RegExp 對象的 Multiline 屬性，$ 也匹配 '/n' 或 '/r' 之前的位置。
* 	匹配前面的子表達式零次或多次。例如，zo* 能匹配 "z" 以及 "zoo"。* 等價於{0,}。
+ 	匹配前面的子表達式一次或多次。例如，'zo+' 能匹配 "zo" 以及 "zoo"，但不能匹配 "z"。+ 等價於 {1,}。
? 	匹配前面的子表達式零次或一次。例如，"do(es)?" 可以匹配 "do" 或 "does" 中的"do" 。? 等價於 {0,1}。
{n} 	n 是一個非負整數。匹配確定的 n 次。例如，'o{2}' 不能匹配 "Bob" 中的 'o'，但是能匹配 "food" 中的兩個 o。
{n,} 	n 是一個非負整數。至少匹配n 次。例如，'o{2,}' 不能匹配 "Bob" 中的 'o'，但能匹配 "foooood" 中的所有 o。'o{1,}' 等價於 'o+'。'o{0,}' 則等價於 'o*'。
{n,m} 	m 和 n 均為非負整數，其中n <= m。最少匹配 n 次且最多匹配 m 次。例如，"o{1,3}" 將匹配 "fooooood" 中的前三個 o。'o{0,1}' 等價於 'o?'。請注意在逗號和兩個數之間不能有空格。
? 	當 該字符緊跟在任何一個其他限制符 (*, +, ?, {n}, {n,}, {n,m}) 後面時，匹配模式是非貪婪的。非貪婪模式盡可能少的匹配所搜索的字符串，而默認的貪婪模式則盡可能多的匹配所搜索的字符串。例如，對於字符串 "oooo"，'o+?' 將匹配單個 "o"，而 'o+' 將匹配所有 'o'。
. 	匹配除 "/n" 之外的任何單個字符。要匹配包括 '/n' 在內的任何字符，請使用象 '[./n]' 的模式。
(pattern) 	匹配 pattern 並獲取這一匹配。所獲取的匹配可以從產生的 Matches 集合得到，在VBScript 中使用 SubMatches 集合，在JScript 中則使用 $0…$9 屬性。要匹配圓括號字符，請使用 '/(' 或 '/)'。
(?:pattern) 	匹 配 pattern 但不獲取匹配結果，也就是說這是一個非獲取匹配，不進行存儲供以後使用。這在使用 "或" 字符 (|) 來組合一個模式的各個部分是很有用。例如， 'industr(?:y|ies) 就是一個比 'industry|industries' 更簡略的表達式。
(?=pattern) 	正 向預查，在任何匹配 pattern 的字符串開始處匹配查找字符串。這是一個非獲取匹配，也就是說，該匹配不需要獲取供以後使用。例如，'Windows (?=95|98|NT|2000)' 能匹配 "Windows 2000" 中的 "Windows" ，但不能匹配 "Windows 3.1" 中的 "Windows"。預查不消耗字符，也就是說，在一個匹配發生後，在最後一次匹配之後立即開始下一次匹配的搜索，而不是從包含預查的字符之後開始。
(?!pattern) 	負 向預查，在任何不匹配 pattern 的字符串開始處匹配查找字符串。這是一個非獲取匹配，也就是說，該匹配不需要獲取供以後使用。例如'Windows (?!95|98|NT|2000)' 能匹配 "Windows 3.1" 中的 "Windows"，但不能匹配 "Windows 2000" 中的 "Windows"。預查不消耗字符，也就是說，在一個匹配發生後，在最後一次匹配之後立即開始下一次匹配的搜索，而不是從包含預查的字符之後開始
x|y 	匹配 x 或 y。例如，'z|food' 能匹配 "z" 或 "food"。'(z|f)ood' 則匹配 "zood" 或 "food"。
[xyz] 	字符集合。匹配所包含的任意一個字符。例如， '[abc]' 可以匹配 "plain" 中的 'a'。
[^xyz] 	負值字符集合。匹配未包含的任意字符。例如， '[^abc]' 可以匹配 "plain" 中的'p'。
[a-z] 	字符範圍。匹配指定範圍內的任意字符。例如，'[a-z]' 可以匹配 'a' 到 'z' 範圍內的任意小寫字母字符。
[^a-z] 	負值字符範圍。匹配任何不在指定範圍內的任意字符。例如，'[^a-z]' 可以匹配任何不在 'a' 到 'z' 範圍內的任意字符。
/b 	匹配一個單詞邊界，也就是指單詞和空格間的位置。例如， 'er/b' 可以匹配"never" 中的 'er'，但不能匹配 "verb" 中的 'er'。
/B 	匹配非單詞邊界。'er/B' 能匹配 "verb" 中的 'er'，但不能匹配 "never" 中的 'er'。
/cx 	匹配由 x 指明的控制字符。例如， /cM 匹配一個 Control-M 或回車符。x 的值必須為 A-Z 或 a-z 之一。否則，將 c 視為一個原義的 'c' 字符。
/d 	匹配一個數字字符。等價於 [0-9]。
/D 	匹配一個非數字字符。等價於 [^0-9]。
/f 	匹配一個換頁符。等價於 /x0c 和 /cL。
/n 	匹配一個換行符。等價於 /x0a 和 /cJ。
/r 	匹配一個回車符。等價於 /x0d 和 /cM。
/s 	匹配任何空白字符，包括空格、製表符、換頁符等等。等價於 [ /f/n/r/t/v]。
/S 	匹配任何非空白字符。等價於 [^ /f/n/r/t/v]。
/t 	匹配一個製表符。等價於 /x09 和 /cI。
/v 	匹配一個垂直製表符。等價於 /x0b 和 /cK。
/w 	匹配包括下劃線的任何單詞字符。等價於'[A-Za-z0-9_]'。
/W 	匹配任何非單詞字符。等價於 '[^A-Za-z0-9_]'。
/xn 	匹配 n，其中 n 為十六進制轉義值。十六進制轉義值必須為確定的兩個數字長。例如，'/x41' 匹配 "A"。'/x041' 則等價於 '/x04' & "1"。正則表達式中可以使用 ASCII 編碼。.
/num 	匹配 num，其中 num 是一個正整數。對所獲取的匹配的引用。例如，'(.)/1' 匹配兩個連續的相同字符。
/n 	標識一個八進制轉義值或一個向後引用。如果 /n 之前至少 n 個獲取的子表達式，則 n 為向後引用。否則，如果 n 為八進制數字 (0-7)，則 n 為一個八進制轉義值。
/nm 	標 識一個八進制轉義值或一個向後引用。如果 /nm 之前至少有 nm 個獲得子表達式，則 nm 為向後引用。如果 /nm 之前至少有 n 個獲取，則 n 為一個後跟文字 m 的向後引用。如果前面的條件都不滿足，若 n 和 m 均為八進制數字 (0-7)，則 /nm 將匹配八進制轉義值 nm。
/nml 	如果 n 為八進制數字 (0-3)，且 m 和 l 均為八進制數字 (0-7)，則匹配八進制轉義值 nml。
/un 	匹配 n，其中 n 是一個用四個十六進制數字表示的 Unicode 字符。例如， /u00A9 匹配版權符號 (?)。
 
 